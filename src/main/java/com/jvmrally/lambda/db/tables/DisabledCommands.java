/*
 * This file is generated by jOOQ.
 */
package com.jvmrally.lambda.db.tables;


import com.jvmrally.lambda.db.DefaultSchema;
import com.jvmrally.lambda.db.Keys;
import com.jvmrally.lambda.db.tables.records.DisabledCommandsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DisabledCommands extends TableImpl<DisabledCommandsRecord> {

    private static final long serialVersionUID = -344977641;

    /**
     * The reference instance of <code>disabled_commands</code>
     */
    public static final DisabledCommands DISABLED_COMMANDS = new DisabledCommands();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DisabledCommandsRecord> getRecordType() {
        return DisabledCommandsRecord.class;
    }

    /**
     * The column <code>disabled_commands.id</code>.
     */
    public final TableField<DisabledCommandsRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('disabled_commands_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>disabled_commands.guild_id</code>.
     */
    public final TableField<DisabledCommandsRecord, String> GUILD_ID = createField(DSL.name("guild_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>disabled_commands.command_name</code>.
     */
    public final TableField<DisabledCommandsRecord, String> COMMAND_NAME = createField(DSL.name("command_name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>disabled_commands</code> table reference
     */
    public DisabledCommands() {
        this(DSL.name("disabled_commands"), null);
    }

    /**
     * Create an aliased <code>disabled_commands</code> table reference
     */
    public DisabledCommands(String alias) {
        this(DSL.name(alias), DISABLED_COMMANDS);
    }

    /**
     * Create an aliased <code>disabled_commands</code> table reference
     */
    public DisabledCommands(Name alias) {
        this(alias, DISABLED_COMMANDS);
    }

    private DisabledCommands(Name alias, Table<DisabledCommandsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DisabledCommands(Name alias, Table<DisabledCommandsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> DisabledCommands(Table<O> child, ForeignKey<O, DisabledCommandsRecord> key) {
        super(child, key, DISABLED_COMMANDS);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<DisabledCommandsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DISABLED_COMMANDS;
    }

    @Override
    public UniqueKey<DisabledCommandsRecord> getPrimaryKey() {
        return Keys.DISABLED_COMMANDS_PKEY;
    }

    @Override
    public List<UniqueKey<DisabledCommandsRecord>> getKeys() {
        return Arrays.<UniqueKey<DisabledCommandsRecord>>asList(Keys.DISABLED_COMMANDS_PKEY, Keys.DISABLED_COMMANDS_GUILD_ID_COMMAND_NAME_KEY);
    }

    @Override
    public DisabledCommands as(String alias) {
        return new DisabledCommands(DSL.name(alias), this);
    }

    @Override
    public DisabledCommands as(Name alias) {
        return new DisabledCommands(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DisabledCommands rename(String name) {
        return new DisabledCommands(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DisabledCommands rename(Name name) {
        return new DisabledCommands(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
