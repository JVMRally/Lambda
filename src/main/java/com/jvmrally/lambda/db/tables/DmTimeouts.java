/*
 * This file is generated by jOOQ.
 */
package com.jvmrally.lambda.db.tables;


import com.jvmrally.lambda.db.DefaultSchema;
import com.jvmrally.lambda.db.Keys;
import com.jvmrally.lambda.db.tables.records.DmTimeoutsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DmTimeouts extends TableImpl<DmTimeoutsRecord> {

    private static final long serialVersionUID = 13853828;

    /**
     * The reference instance of <code>dm_timeouts</code>
     */
    public static final DmTimeouts DM_TIMEOUTS = new DmTimeouts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DmTimeoutsRecord> getRecordType() {
        return DmTimeoutsRecord.class;
    }

    /**
     * The column <code>dm_timeouts.userid</code>.
     */
    public final TableField<DmTimeoutsRecord, Long> USERID = createField(DSL.name("userid"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dm_timeouts.last_message_time</code>.
     */
    public final TableField<DmTimeoutsRecord, Long> LAST_MESSAGE_TIME = createField(DSL.name("last_message_time"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>dm_timeouts</code> table reference
     */
    public DmTimeouts() {
        this(DSL.name("dm_timeouts"), null);
    }

    /**
     * Create an aliased <code>dm_timeouts</code> table reference
     */
    public DmTimeouts(String alias) {
        this(DSL.name(alias), DM_TIMEOUTS);
    }

    /**
     * Create an aliased <code>dm_timeouts</code> table reference
     */
    public DmTimeouts(Name alias) {
        this(alias, DM_TIMEOUTS);
    }

    private DmTimeouts(Name alias, Table<DmTimeoutsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DmTimeouts(Name alias, Table<DmTimeoutsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> DmTimeouts(Table<O> child, ForeignKey<O, DmTimeoutsRecord> key) {
        super(child, key, DM_TIMEOUTS);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<DmTimeoutsRecord> getPrimaryKey() {
        return Keys.DM_TIMEOUTS_PKEY;
    }

    @Override
    public List<UniqueKey<DmTimeoutsRecord>> getKeys() {
        return Arrays.<UniqueKey<DmTimeoutsRecord>>asList(Keys.DM_TIMEOUTS_PKEY);
    }

    @Override
    public DmTimeouts as(String alias) {
        return new DmTimeouts(DSL.name(alias), this);
    }

    @Override
    public DmTimeouts as(Name alias) {
        return new DmTimeouts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DmTimeouts rename(String name) {
        return new DmTimeouts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DmTimeouts rename(Name name) {
        return new DmTimeouts(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
