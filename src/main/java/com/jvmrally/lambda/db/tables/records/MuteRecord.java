/*
 * This file is generated by jOOQ.
 */
package com.jvmrally.lambda.db.tables.records;


import com.jvmrally.lambda.db.tables.Mute;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MuteRecord extends UpdatableRecordImpl<MuteRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 334837791;

    /**
     * Setter for <code>mute.userid</code>.
     */
    public void setUserid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>mute.userid</code>.
     */
    public Long getUserid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>mute.mute_expiry</code>.
     */
    public void setMuteExpiry(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>mute.mute_expiry</code>.
     */
    public Long getMuteExpiry() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Mute.MUTE.USERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Mute.MUTE.MUTE_EXPIRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getUserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getMuteExpiry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getUserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getMuteExpiry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MuteRecord value1(Long value) {
        setUserid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MuteRecord value2(Long value) {
        setMuteExpiry(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MuteRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MuteRecord
     */
    public MuteRecord() {
        super(Mute.MUTE);
    }

    /**
     * Create a detached, initialised MuteRecord
     */
    public MuteRecord(Long userid, Long muteExpiry) {
        super(Mute.MUTE);

        set(0, userid);
        set(1, muteExpiry);
    }
}
